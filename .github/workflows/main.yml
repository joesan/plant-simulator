name: build

on:
  push:
    paths-ignore:
      - 'images/**'
      - README.md
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

env:
  USER: joesan
  DEPLOYMENT_REPO_NAME: plant-simulator-deployment
  DOCKER_REGISTRY_URL: hub.docker.com
  DOCKER_APP_NAME: plant-simulator
  DOCKER_REGISTRY_USERNAME: joesan

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: sbt-test
        run: sbt clean coverage test coverageReport

  docker_push:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Extract Release Tag Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: docker-login
        env:
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: docker-push
        env:
          GH_REPO: github.com/${{ env.USER }}/${{ env.DEPLOYMENT_REPO_NAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          DOCKER_APP_URL: ${{ env.DOCKER_REGISTRY_URL }}/${{ env.USER }}/plant-simulator
        run: |
          echo "Running sbt assembly for release version $RELEASE_VERSION"
          sbt "set test in assembly := {}" assembly
          bash docker/docker_push.sh && \
          bash ./.github/scripts/tag_deployment
